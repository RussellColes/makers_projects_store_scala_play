name: Scala Play Framework CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Using a simpler approach without containers
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        # Health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'sbt'

      - name: Install SBT
        run: |
          echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
          echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
          curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
          sudo apt-get update
          sudo apt-get install -y sbt

      - name: Create test.conf
        run: |
          cat > conf/test.conf << EOF
          include "application.conf"
          
          slick.dbs.default.profile = "slick.jdbc.PostgresProfile$"
          slick.dbs.default.db.driver = "org.postgresql.Driver"
          slick.dbs.default.db.url = "jdbc:postgresql://localhost:5432/test"
          slick.dbs.default.db.user = "postgres"
          slick.dbs.default.db.password = "postgres"
          EOF

      - name: Run tests
        run: sbt "testOnly * -- -Dconfig.file=conf/test.conf"